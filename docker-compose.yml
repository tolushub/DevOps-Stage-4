version: '3.8'
services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "80:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`ops-ack.duckdns.org`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  auth-api:
    build:
      context: ./auth-api
    ports:
      - "8081:8081"
    environment:
      - JWT_SECRET=myfancysecret
      - USERS_API_ADDRESS=http://users-api:8083
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-api.rule=Host(`auth.ops-ack.duckdns.org`) || PathPrefix(`/api/auth`)"
      - "traefik.http.services.auth-api.loadbalancer.server.port=8081"

  todos-api:
    build:
      context: ./todos-api
    ports:
      - "8082:8082"
    environment:
      - JWT_SECRET=myfancysecret
      - REDIS_HOST=redis-queue
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.todos-api.rule=Host(`todos.ops-ack.duckdns.org`) || PathPrefix(`/api/todos`)"
      - "traefik.http.services.todos-api.loadbalancer.server.port=8082"

  users-api:
    build:
      context: ./users-api
    ports:
      - "8083:8083"
    environment:
      - SERVER_PORT=8083
      - JWT_SECRET=myfancysecret
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.users-api.rule=Host(`users.ops-ack.duckdns.org`) || PathPrefix(`/api/users`)"
      - "traefik.http.services.users-api.loadbalancer.server.port=8083"

  log-message-processor:
    build:
      context: ./log-message-processor
    depends_on:
      - redis-queue

  redis-queue:
    build:
      context: ./redis-queue
    ports:
      - "6379:6379"

  traefik:
    image: "traefik:v2.9"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=toluojo01@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--log.level=ERROR" # Set log level to ERROR to suppress warnings
    ports:
      - "8086:80"
      - "443:443"
      - "8080:8080" # Dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`traefik.ops-ack.duckdns.org`)"
      - "traefik.http.routers.api.service=api@internal"